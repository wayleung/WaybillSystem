<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- 读取db.properties中的变量 值，db.properties要放在classpath根目录下 -->
	<context:property-placeholder location="classpath:db.properties" />
      
 
	<!-- redis 客户端配置 -->    
   <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">    
<!--        <property name="maxTotal" value="${jedisPoolConfig.maxTotal}"/>    
       <property name="maxIdle" value="${jedisPoolConfig.maxIdle}"/>    
       <property name="maxWaitMillis" value="${jedisPoolConfig.maxWaitMillis}"/>  -->  
       <property name="testWhileIdle" value="true"/>    
       <property name="testOnBorrow" value="false"/>    
       <property name="testOnReturn" value="false"/>     
   </bean>    
   <bean id="readJedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">    
       <property name="hostName" value="${jedis.read.host}" />    
       <property name="port" value="${jedis.read.port}" />    
<!--        <property name="password" value="${jedis.read.password}" />     -->
       <property name="timeout" value="${jedis.read.timeout}" />    
       <property name="database" value="${jedis.read.database}" />    
       <property name="poolConfig" ref="jedisPoolConfig" />    
   </bean>    
   <bean id="writeJedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">    
       <property name="hostName" value="${jedis.write.host}" />    
       <property name="port" value="${jedis.write.port}" />    
<!--        <property name="password" value="${jedis.write.password}" /> -->    
       <property name="timeout" value="${jedis.write.timeout}" />    
       <property name="database" value="${jedis.write.database}" />    
       <property name="poolConfig" ref="jedisPoolConfig" />    
   </bean>    
   <bean id="readRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">    
       <property name="connectionFactory" ref="readJedisConnectionFactory" />    
   </bean>    
   <bean id="writeRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">    
       <property name="connectionFactory" ref="writeJedisConnectionFactory" />    
   </bean> 
</beans>
